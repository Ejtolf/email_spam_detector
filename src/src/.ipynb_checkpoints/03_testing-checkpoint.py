#!/usr/bin/env python
# coding: utf-8

# # Testing

# In[3]:


import joblib
import os


# In[5]:


model_path = os.path.join('..', 'src', 'models', 'spam_model.pkl')
vectorizer_path = os.path.join('..', 'src', 'models', 'vectorizer.pkl')

model = joblib.load(model_path)
vectorizer = joblib.load(vectorizer_path)

print('–ú–æ–¥–µ–ª—å –∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.')


# In[6]:


def predict_email(title, text, service):
    combined = title + " " + text + " " + service
    vec = vectorizer.transform([combined])
    pred = model.predict(vec)[0]
    proba = model.predict_proba(vec)[0][1]
    
    return pred, proba


# In[33]:


emails = [
    {
        "title": "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ iPhone",
        "text": "–í—ã –±—ã–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ iPhone 15! –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è.",
        "service": "Mail.ru"
    },
    {
        "title": "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è",
        "text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú—ã —Ä–∞–¥—ã —Å–æ–æ–±—â–∏—Ç—å, —á—Ç–æ –≥–æ—Ç–æ–≤—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞.",
        "service": "Gmail"
    },
    {
        "title": "–í–∞—à–∞ –∫–∞—Ä—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞",
        "text": "–ß—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø, –ø—Ä–æ–π–¥–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ —Å—Å—ã–ª–∫–µ. –≠—Ç–æ –∑–∞–π–º—ë—Ç –º–∞–∫—Å–∏–º—É–º 30 —Å–µ–∫—É–Ω–¥!",
        "service": "Gmail"
    },
    {
        "title": "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–∞—Ä–∏—Ñ–µ",
        "text": "–í–≤–µ–¥–µ–Ω—ã –Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–∞—Ä–∏—Ñ–µ –ë–∏–ª–∞–π–Ω. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
        "service": "Mail.ru"
    }
]


# In[34]:


for email in emails:
    label, proba = predict_email(email['title'], email['text'], email['service'])
    label_str = 'üö®–°–ü–ê–úüö®' if label else '‚úÖ–ù–ï —Å–ø–∞–º‚úÖ'
    print(f"üì© '{email['title']}' ‚Äî {label_str} (–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–ø–∞–º–∞: {int(proba * 100)}%)")


# In[ ]:




